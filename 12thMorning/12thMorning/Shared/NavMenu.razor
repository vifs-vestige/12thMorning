@implements IDisposable

<BSNavbar IsExpand="true" IsDark="true" Color="Color.Dark" Class="fixed-top" Style="z-index: 10;">
    <BSNavbarBrand Href="/">12th Morning</BSNavbarBrand>
    <BSNav IsPills="true" Class="m-2" IsNavbar="true">
        <BSDropdown Class="mx-2">
            <BSButtonGroup>
                <BSNavLink Class="btn btn-outline-info blog-menu" href="/blogs">
                    Blog @State.BlogType
                </BSNavLink>
                <BSDropdownToggle IsSplit="true" @onclick="OnClick" Color="Color.Info"></BSDropdownToggle>
                <BSDropdownMenu @bind-IsOpen="@IsOpen">
                    <BSDropdownItem @onclick="OnClick" Href="/blogs">all</BSDropdownItem>
                    <BSDropdownItem IsDivider="true" />
                    <BSDropdownItem @onclick="OnClick" Href="/blogs/dev">dev</BSDropdownItem>
                    <BSDropdownItem IsDivider="true" />
                    <BSDropdownItem @onclick="OnClick" Href="/blogs/personal">personal</BSDropdownItem>
                </BSDropdownMenu>
            </BSButtonGroup>
        </BSDropdown>
        <BSNavItem Class="mx-2">
            <BSNavLink Class="btn btn-outline-info" href="/streamschedule">
                Stream Schedule
            </BSNavLink>
        </BSNavItem>

        @if (Startup.IsDev) {
            <BSNavItem Class="mx-2">
                <BSNavLink Class="btn btn-outline-info" href="/blogupdate">
                    Blog Update
                </BSNavLink>
            </BSNavItem>
        }
    </BSNav>
    <BSNav IsPills="true" Class="m-2 ml-auto" IsNavbar="true">
        <BSNavItem Class="mx-2">
            <BSButton IsOutline="true" Class="@State.MonthButtonClass" Color="Color.Info" @onclick="OnMonthClick">
                Months
            </BSButton>
        </BSNavItem>
    </BSNav>
</BSNavbar>

@code {
    protected bool IsOpen { get; set; } = false;

    protected void OnClick(MouseEventArgs e) {
        IsOpen = !IsOpen;
        StateHasChanged();
    }

    protected void OnMonthClick(MouseEventArgs e) {
        State.OpenMonths();
    }

    protected override void OnInitialized() {
        State.Change += StateHasChanged;
    }

    public void Dispose() {
        State.Change -= StateHasChanged;
    }

}
