@implements IDisposable

<BSNavbar IsExpand="true" IsDark="true" Color="Color.Dark">
    <BSNavbarBrand Href="/">12th Morning</BSNavbarBrand>
    <BSNavbarToggler @onclick="OnClick2" />
    <BSCollapse IsOpen="@IsOpen2" IsNavbar="true" IsOpenChanged="OpenChanged">
        <BSNav Class="mr-auto" IsList="true" IsPills="true" IsNavbar="true" >
                <BSButtonGroup Class="mx-2">
                    <BSNavLink Class="btn btn-outline-info col-lg-9" href="/blogs">
                        Blog @State.BlogType
                    </BSNavLink>
                    <BSDropdownToggle Class="" IsSplit="true" @onclick="OnClick" Color="Color.Info"></BSDropdownToggle>
                    <BSDropdownMenu @bind-IsOpen="@IsOpen">
                        <BSDropdownItem @onclick="OnClick" Href="/blogs">all</BSDropdownItem>
                        <BSDropdownItem IsDivider="true" />
                        <BSDropdownItem @onclick="OnClick" Href="/blogs/dev">dev</BSDropdownItem>
                        <BSDropdownItem IsDivider="true" />
                        <BSDropdownItem @onclick="OnClick" Href="/blogs/personal">personal</BSDropdownItem>
                    </BSDropdownMenu>
                </BSButtonGroup>
            <BSNavItem>
                <BSNavLink Class="btn btn-outline-info mx-2" href="/streamschedule">
                    Stream Schedule
                </BSNavLink>
            </BSNavItem>
            @if (Startup.IsDev) {
                <BSNavItem>
                    <BSNavLink Class="btn btn-outline-info mx-2" href="/blogupdate">
                        Blog Update
                    </BSNavLink>
                </BSNavItem>
            }
        </BSNav>
        <BSNav IsPills="true" IsNavbar="true">
            <BSNavItem>
                <BSButton IsOutline="true" Class="@State.MonthButtonClass" Color="Color.Info" @onclick="OnMonthClick">
                    Months
                </BSButton>
            </BSNavItem>
        </BSNav>
    </BSCollapse>
</BSNavbar>

@code {
    protected bool IsOpen { get; set; } = false;
    private bool IsOpen2 { get; set; } = false;

    protected void OnClick(MouseEventArgs e) {
        IsOpen = !IsOpen;
        StateHasChanged();
    }

    protected void OnMonthClick(MouseEventArgs e) {
        State.OpenMonths();
    }

    protected override void OnInitialized() {
        State.Change += StateHasChanged;
    }

    public void Dispose() {
        State.Change -= StateHasChanged;
    }

    void OpenChanged(bool e) {
        IsOpen2 = e;
        StateHasChanged();
    }

    private void OnClick2(MouseEventArgs e) {
        IsOpen2 = !IsOpen2;
        StateHasChanged();
    }

}
