@page "/queslar/partners"
@inherits ApiCheck
@using System.Net.Http
@inject QueslarService Queslar
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@using _12thMorning.Models.Queslar.Player
@using _12thMorning.Models.Queslar

@name
@if (PlayerInfo != null) {
    <BSButton OnClick="Refresh">Refresh</BSButton>
    <span><small> you can support the creator of this tool at "VifsVestige" enchanting service</small></span>

    <br />
    <BSButton Color="Color.Primary" OnClick="@(e => toggleDropDowns(e, "partners"))" Class="dropdown">partners <i class="oi oi-chevron-@(Toggles["partners"] ? "bottom" : "left")" /></BSButton>
    <BSCollapse IsOpen="@Toggles["partners"]">
        <BSTable IsStriped="true" IsSmall="true" IsBordered="true">
            <BSTableHead TableHeadType="TableHeadType.Dark">
                <tr>
                    <th scope="col">name</th>
                    <th scope="col">res</th>
                    <th scope="col">stat</th>
                    <th scope="col">player stat</th>
                    <th scope="col">speed</th>
                    <th scope="col">int</th>
                    <th scope="col">total stats</th>
                    <th scope="col">res</th>
                    <th scope="col">res/hour</th>
                    <th scope="col">Total Spent</th>
                </tr>
            </BSTableHead>
            <tbody>
                @foreach (var partner in PlayerInfo.PartnerInfo.PartnersInfo.Values) {
                    <tr>
                        <th scope="row">@partner.Name</th>
                        <td>
                            <BSDropdown>
                                <BSDropdownToggle>@partner.ResType.ToString()</BSDropdownToggle>
                                <BSDropdownMenu>
                                    @foreach (ResTypes resType in Enum.GetValues(typeof(ResTypes))) {
                                        <BSDropdownItem @onclick="@(e => partner.SetResType(resType))" Href="javascript:void(0);">@resType.ToString()</BSDropdownItem>
                                    }
                                </BSDropdownMenu>
                            </BSDropdown>
                        </td>
                        <td>@partner.PartnerStat.ToString("N0")</td>
                        <td>@partner.PlayerStat.ToString("N0")</td>
                        <td>
                            <div class="input-group">
                                <input type="number" class="form-control" @bind-value="partner.Speed" @onkeyup="PlayerInfo.PartnerInfo.Update" tabindex="1" />
                                <div class="input-group-append">
                                    <div class="input-group-text">@partner.Seconds.ToString("N2")</div>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="input-group">
                                <input type="number" class="form-control" @bind-value="partner.Intelligence" @onkeyup="PlayerInfo.PartnerInfo.Update" tabindex="2" />
                                <div class="input-group-append">
                                    <div class="input-group-text">@partner.IntPercent.ToString("N2")%</div>
                                </div>
                            </div>
                        </td>
                        <td>@partner.TotalStats.ToString("N0")</td>
                        <td>@partner.Res</td>
                        <td>@partner.ResPerHour.ToString("N0")</td>
                        <td>@partner.Spent.ToString("N0")</td>
                    </tr>
                }
                <tr>
                    <th scope="row">Total</th>
                    <th colspan="6"></th>
                    <th>@PlayerInfo.PartnerInfo.PartnersInfo.Sum(x => x.Value.Res).ToString("N0")</th>
                    <th>@PlayerInfo.PartnerInfo.PartnersInfo.Sum(x => x.Value.ResPerHour).ToString("N0")</th>
                    <th>@PlayerInfo.PartnerInfo.PartnersInfo.Sum(x => x.Value.Spent).ToString("N0")</th>
                </tr>

            </tbody>
        </BSTable>
    </BSCollapse>
    <br />
    <BSButton Color="Color.Primary" OnClick="@(e => toggleDropDowns(e, "boosts"))">boosts <i class="oi oi-chevron-@(Toggles["boosts"] ? "bottom" : "left")" /></BSButton>
    <BSCollapse IsOpen="@Toggles["boosts"]">
        <BSBasicForm IsInline="true">
            <BSRow>
                <BSCol SM="4">
                    <BSFormGroup Class="input-group">
                        <BSLabel>tax&nbsp;</BSLabel>
                        <BSBasicInput @bind-Value="PlayerInfo.PartnerInfo.GlobalInfo.Tax" @oninput="@(e => TaxUpdate(e))" InputType="InputType.Number" />
                    </BSFormGroup>
                </BSCol>
                <BSCol SM="4">
                    <BSFormGroup Class="input-group">
                        <BSLabel>vip&nbsp;</BSLabel>
                        <BSBasicInput @bind-Value="PlayerInfo.PartnerInfo.GlobalInfo.Vip" @onchange="PlayerInfo.PartnerInfo.Update" InputType="InputType.Checkbox" />
                    </BSFormGroup>
                </BSCol>
                <BSCol SM="4">
                    <BSFormGroup Class="input-group">
                        <BSLabel>village mill&nbsp;</BSLabel>
                        <BSBasicInput InputType="InputType.Number" @bind-Value="PlayerInfo.PartnerInfo.GlobalInfo.VillageLevel" @onkeyup="PlayerInfo.PartnerInfo.Update" />
                        <div class="input-group-append">
                            <div class="input-group-text">@(PlayerInfo.PartnerInfo.GlobalInfo.VillageBoost.ToString("N0"))%</div>
                        </div>
                    </BSFormGroup>
                </BSCol>
            </BSRow>
        </BSBasicForm>
        <br />
        <BSTable IsStriped="true" IsSmall="true" IsBordered="true">
            <BSTableHead TableHeadType="TableHeadType.Dark">
                <tr>
                    <th scope="col">Res Type</th>
                    <th scope="col">relic boost</th>
                    <th scope="col">house</th>
                    <th scope="col">enchants</th>
                </tr>
            </BSTableHead>
            <tbody>
                @foreach (var boost in PlayerInfo.PartnerInfo.BoostsInfo.Values) {
                    <tr>
                        <th scope="row">@boost.ResType.ToString()</th>
                        <td>
                            <div class="input-group">
                                <input type="number" class="form-control" @bind-value="boost.RelicLevel" @onkeyup="PlayerInfo.PartnerInfo.Update" tabindex="3" />
                                <div class="input-group-append">
                                    <div class="input-group-text">@(boost.RelicBoost.ToString("N2"))%</div>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="input-group">
                                <input type="number" class="form-control" @bind-value="boost.HouseLevel" @onkeyup="PlayerInfo.PartnerInfo.Update" tabindex="4" />
                                <div class="input-group-append">
                                    <div class="input-group-text">@(boost.HouseBoost.ToString("N0"))%</div>
                                </div>
                            </div>
                        </td>
                        <td>@boost.EnchantBoost</td>
                    </tr>
                }
            </tbody>
        </BSTable>
    </BSCollapse>
    <br />
    <BSButton Color="Color.Primary" OnClick="@(e => toggleDropDowns(e, "pets"))">pets <i class="oi oi-chevron-@(Toggles["pets"] ? "bottom" : "left")" /></BSButton>
    <BSCollapse IsOpen="@Toggles["pets"]">
        <BSTable IsStriped="true" IsSmall="true" IsBordered="true">
            <BSTableHead TableHeadType="TableHeadType.Dark">
                <tr>
                    <th scope="col">name</th>
                    <th>res</th>
                    <th>level</th>
                    <th>food/hour</th>
                </tr>
            </BSTableHead>
            <tbody>
                @foreach (var pet in PlayerInfo.PartnerInfo.PetsInfo.Values) {
                    <tr>
                        <th scope="auto">@pet.Name</th>
                        <td>@pet.ResType.ToString()</td>
                        <td>
                            <div class="input-group">
                                <input type="number" class="form-control" @bind-value="pet.Tier" @onkeyup="PlayerInfo.PartnerInfo.Update" />
                                <div class="input-group-append">
                                    <div class="input-group-text">@pet.PetFood.ToString("N0")</div>
                                </div>
                            </div>
                        </td>
                        <td>@pet.PetFoodPerHour.ToString("N0")</td>
                    </tr>
                }
            </tbody>
        </BSTable>
    </BSCollapse>
    <br />
    <BSButton Color="Color.Primary" OnClick="@(e => toggleDropDowns(e, "income"))">final <i class="oi oi-chevron-@(Toggles["income"] ? "bottom" : "left")" /></BSButton>
    <BSCollapse IsOpen="@Toggles["income"]">
        <BSTable IsStriped="true" IsSmall="true" IsBordered="true">
            <BSTableHead TableHeadType="TableHeadType.Dark">
                <tr>
                    <th scope="col">name</th>
                    <th>type</th>
                    <th>total/hour</th>
                    <th>taxed/hour</th>
                    <th>res/hour</th>
                    <th>total/day</th>
                    <th>taxed/day</th>
                    <th>final/day</th>
                </tr>
            </BSTableHead>
            <tbody>
                @foreach (var partner in PlayerInfo.PartnerInfo.PartnersIncomeInfo.Values) {
                    <tr>
                        <th scope="auto">@partner.PartnerInfo.Name</th>
                        <td>@partner.PartnerInfo.ResType.ToString()</td>
                        <td>@partner.Res.ToString("N0")</td>
                        <td>@partner.Taxed.ToString("N0")</td>
                        <td>@partner.ResPostTax.ToString("N0")</td>
                        <td>@((24 * partner.Res).ToString("N0"))</td>
                        <td>@((24 * partner.Taxed).ToString("N0"))</td>
                        <td>@((24 * partner.ResPostTax).ToString("N0"))</td>
                    </tr>
                }
                <tr>
                    <th scope="auto">totals</th>
                    <th></th>
                    <th>@PlayerInfo.PartnerInfo.PartnersIncomeInfo.Values.Sum(x => x.Res).ToString("N0")</th>
                    <th>@PlayerInfo.PartnerInfo.PartnersIncomeInfo.Values.Sum(x => x.Taxed).ToString("N0")</th>
                    <th>@PlayerInfo.PartnerInfo.PartnersIncomeInfo.Values.Sum(x => x.ResPostTax).ToString("N0")</th>
                    <th>@((PlayerInfo.PartnerInfo.PartnersIncomeInfo.Values.Sum(x => x.Res) * 24).ToString("N0"))</th>
                    <th>@((PlayerInfo.PartnerInfo.PartnersIncomeInfo.Values.Sum(x => x.Taxed) * 24).ToString("N0"))</th>
                    <th>@((PlayerInfo.PartnerInfo.PartnersIncomeInfo.Values.Sum(x => x.ResPostTax) * 24).ToString("N0"))</th>
                </tr>
            </tbody>
        </BSTable>
    </BSCollapse>
    <br />
    <BSButton Color="Color.Primary" OnClick="@(e => toggleDropDowns(e, "total"))">totals <i class="oi oi-chevron-@(Toggles["total"] ? "bottom" : "left")" /></BSButton>
    <BSCollapse IsOpen="@Toggles["total"]">
        <BSTable IsStriped="true" IsSmall="true" IsBordered="true">
            <BSTableHead TableHeadType="TableHeadType.Dark">
                <tr>
                    <th scope="col">type</th>
                    <th>total/hour</th>
                    <th>taxed/hour</th>
                    <th>pet/hour</th>
                    <th>res/hour</th>
                    <th>total/day</th>
                    <th>taxed/day</th>
                    <th>pet/day</th>
                    <th>res/day</th>
                </tr>
            </BSTableHead>
            <tbody>
                @foreach (var total in PlayerInfo.PartnerInfo.Totals.Values) {
                    <tr>
                        <th scope="auto">@total.ResType.ToString()</th>
                        <td>@total.Res.ToString("N0")</td>
                        <td>@total.Taxed.ToString("N0")</td>
                        <td>@total.Pets.ToString("N0")</td>
                        <td>@((total.Res - total.Taxed - total.Pets).ToString("N0"))</td>
                        <td>@((total.Res * 24).ToString("N0"))</td>
                        <td>@((total.Taxed * 24).ToString("N0"))</td>
                        <td>@((total.Pets * 24).ToString("N0"))</td>
                        <td>@(((total.Res - total.Taxed - total.Pets) * 24).ToString("N0"))</td>
                    </tr>
                }
            <tr>
                <th scope="auto">totals</th>
                <th>@PlayerInfo.PartnerInfo.Totals.Values.Sum(x => x.Res).ToString("N0")</th>
                <th>@PlayerInfo.PartnerInfo.Totals.Values.Sum(x => x.Taxed).ToString("N0")</th>
                <th>@PlayerInfo.PartnerInfo.Totals.Values.Sum(x => x.Pets).ToString("N0")</th>
                <th>@PlayerInfo.PartnerInfo.Totals.Values.Sum(x => x.Res - x.Taxed - x.Pets).ToString("N0")</th>
                <th>@((PlayerInfo.PartnerInfo.Totals.Values.Sum(x => x.Res) * 24).ToString("N0"))</th>
                <th>@((PlayerInfo.PartnerInfo.Totals.Values.Sum(x => x.Taxed) * 24).ToString("N0"))</th>
                <th>@((PlayerInfo.PartnerInfo.Totals.Values.Sum(x => x.Pets) * 24).ToString("N0"))</th>
                <th>@((PlayerInfo.PartnerInfo.Totals.Values.Sum(x => x.Res - x.Taxed - x.Pets) * 24).ToString("N0"))</th>
            </tr>
            </tbody>
        </BSTable>
    </BSCollapse>

}

@code {
    public string name;
    Dictionary<string, bool> Toggles = new Dictionary<string, bool> {
                { "partners", true },
                { "boosts", true },
        { "pets", true },
        { "income", true },
                { "total", true },
            };

    protected async void TaxUpdate(ChangeEventArgs e) {
        var tax = Queslar.UpdateTax(e.Value.ToString());
        PlayerInfo.PartnerInfo.GlobalInfo.Tax = tax;
        PlayerInfo.PartnerInfo.Update();
        await localStorage.SetItemAsync("Tax", tax);
    }

    protected async void Refresh(MouseEventArgs e) {
        await Queslar.Update<Full>();
        PlayerInfo = Queslar.GetFullWrapper();
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
            await base.OnAfterRenderAsync(firstRender);
            if (Queslar.Values.ContainsKey(typeof(Full)) && Queslar.Values[typeof(Full)] != null) {
                checkTax();
                var toggles = await localStorage.GetItemAsync<Dictionary<string, bool>>("Toggles");
                if (toggles != null) {
                    foreach (var toggle in toggles) {
                        if (Toggles.ContainsKey(toggle.Key)) {
                            Toggles[toggle.Key] = toggle.Value;
                        }
                    }
                }
                StateHasChanged();
            }
        }
    }

    private async void checkTax() {
        var tax = await localStorage.GetItemAsync<string>("Tax");
        if (tax != null && tax != "" && tax != "0") {
            PlayerInfo.PartnerInfo.GlobalInfo.Tax = Queslar.UpdateTax(tax);
            PlayerInfo.PartnerInfo.Update();
        }
    }

    private async void toggleDropDowns(MouseEventArgs e, string type) {
        Toggles[type] = !Toggles[type];
        await localStorage.SetItemAsync("Toggles", Toggles);
    }
}
