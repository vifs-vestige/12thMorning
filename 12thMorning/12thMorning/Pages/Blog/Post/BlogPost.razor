@page "/blog/{Id:int}"
@page "/blog/{Id:int}/{type}"

@inherits RefreshPage

@inject BlogService BlogDataService
@using _12thMorning.Pages.Blog.Post.Comments

<BSPagination>
    <BSPaginationItem IsDisabled="@(Previous == null ? true : false)">
        <BSPaginationLink PaginationLinkType="PaginationLinkType.PreviousText" Href="@GetUrl("Previous")" />
    </BSPaginationItem>
    <BSPaginationItem IsDisabled="@(Next == null ? true : false)">
        <BSPaginationLink PaginationLinkType="PaginationLinkType.NextText" Href="@GetUrl("Next")" />
    </BSPaginationItem>
</BSPagination>
<BSRow Class="mx-auto">
<h3>@Blog.Title</h3>
</BSRow>
<small class="ml-2">@Blog.DateAdded.ToString("dd MMMM yyyy")</small>
<div class="mx-auto">
    @((MarkupString)Blog.Post)
</div>

<BlogRootComments Id="@Id" />

@code {
    //todo: change color of comments
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public string Type { get; set; }
    private Blog Blog;
    private int? Next;
    private int? Previous;

    //protected override void OnInitialized() {
    //    Refresh();
    //}

    protected override void Refresh() {
        var nextPrevious = BlogDataService.GetBlogNextAndPrevious(Id, Type);
        Next = nextPrevious[0];
        Previous = nextPrevious[1];
        Blog = BlogDataService.GetBlogFull(Id);
        base.Refresh();
    }

    //todo: change direction to bool isNext
    private string GetUrl(string direction) {
        var index = "";
        if (direction == "Next" && Next != null)
            index = "/" + Next;
        else if (direction == "Previous" && Previous != null)
            index = "/" + Previous;
        var type = "";
        if (Type != null)
            type = "/" + Type;
        return "/blog" + index + type;
    }

}
