@page "/blogUpdate"
@page "/blogUpdate/{Id:int}"
@attribute [Authorize(Roles = "admin")]

@inject BlogService BlogDataService

<h3>BlogUpdate: @Blog.Title</h3>

<button @onclick="Next">next</button>

<EditForm Model="@Blog" OnValidSubmit="@submit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText id="title" @bind-Value="Blog.Title" />
    <br />
    <InputTextArea id="post" @bind-Value="Blog.Post" style="width: 90%; height: 400px;" />
    <br />
    <InputSelect id="mainTage" @bind-Value="Blog.MainTag">
        <option value=""></option>
        <option value="Mixed">Mixed</option>
        <option value="Dev">Dev</option>
        <option value="Personal">Personal</option>
    </InputSelect>
    <br />
    <button type="submit" class="btn-danger">Submit</button>

</EditForm>
<br />
<button type="button" class="btn-primary" @onclick="Preview">Preview</button>

<div>
    @Post
</div>

@code {
    [Parameter]
    public int? Id { get; set; }
    private bool isVisible { get; set; } = true;

    private Blog Blog;
    private MarkupString Post;

    protected void Next() {
        if (Id != null) {
            Id++;
            Blog = BlogDataService.GetBlogRaw((int)Id);
        }

    }

    protected override void OnInitialized() {
        if (Id != null)
            Blog = BlogDataService.GetBlogRaw((int)Id);
        else
            Blog = new Blog();
    }

    private async void Preview() {
        Post = BlogDataService.GetFullPreview(Blog.Post);
        await JSRuntime.InvokeAsync<string>
    ("PR.prettyPrint");
    }

    private void submit() {
        BlogDataService.UpdateBlog(Blog);
    }
}
